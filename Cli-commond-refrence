#Create tags.
aws ec2 create-tags --resources i-1286157c --tags Key=My1stTag,Value=Value1 Key=My2ndTag,Value=Value2 Key=My3rdTag,Value=Value3
#list stop instances with instance Ids.
aws ec2 describe-instances --filters  "Name=instance-state-name,Values=stopped" --query 'Reservations[].Instances[].InstanceId' --output=json
#Start instance with instance ids.
aws ec2 start-instances --instance-ids i-1234567890abcdef0
#stop instances with instance ids.
aws ec2 stop-instances --instance-ids i-1234567890abcdef0
#Terminate.
aws ec2 terminate-instances --instance-ids i-1234567890abcdef0
#tag ebs of stopped instance with file
aws ec2 create-tags --resources `head -n1 stopped_volumes.txt` --tags Key=Status_temp,Value=Stopped
#tag single ebs.
 aws ec2 create-tags --resources "vol-0fda575b6186ee3f6" --tags Key=Status_temp,Value=Stopped
#list all ebs of stopped instances.
aws ec2 describe-instances --filters  "Name=instance-state-name,Values=stopped" --query 'Reservations[].Instances[].BlockDeviceMappings[].Ebs.VolumeId' --output=text > stopped_volumes.txt
#list only 10 line.
aws ec2 describe-instances --filters  "Name=instance-state-name,Values=stopped" --query 'Reservations[].Instances[].BlockDeviceMappings[].Ebs.VolumeId' --output=json --max-items 10
#Cli-commond-refrence
https://riptutorial.com/Download/aws-cli.pdf
#Bash scripting
https://ryanstutorials.net/bash-scripting-tutorial/bash-variables.php

#Sed and awk commond reffrence
https://www.journaldev.com/28984/linux-sed-command-examples#linux-sed-command-syntax
#List all reserved_active instance
aws ec2 describe-reserved-instances --filters Name=state,Values=active --output=text | awk '{print $6 "\t" $8 "\t" $4}'  active_reserved_last_date.txt
#Check file count on /
#inodes
 for i in /*; do echo $i; find $i |wc -l; done
 for i in /home/*; do echo $i; find $i |wc -l; done
 rm -rf /home/bad_user/directory_with_lots_of_empty_files
for i in /*; do echo $i; find $i |wc -l; done
#Find 0 size file 
find . -size 0 -ls  
#Find and delete 0 size files
find . -type f -size 0 | xargs rm -f
#Check queue emails and delete 
sudo find /var/spool/postfix/deferred -type f | wc -l
sudo postsuper -d ALL 

#The shell variable $$ contains the PID of the current running script. You could use it like this:
echo $$ >/tmp/backup_pid

#reseller elb -removed-14-aug-2019
#workflow-web elb -removed-14-aug-2019
#using file in aws cli 
for ins in `cat backend_instaceid.txt` ; do aws ec2 create-tags --resources $ins --tags Key=runtime,Value=24x7; done


#for list instance by tag ip
aws ec2 describe-instances --filters "Name=tag:service,Values=pricing" "Name=instance-state-name,Values=running" --query 'Reservations[*].Instances[*].PrivateIpAddress' --output=text
#convert .pem tp .pub (its important for auto login)
ssh-keygen -y -f private_key1.pem > public_key1.pub 
#Print only normal instance ips.
aws ec2 describe-instances --query "Reservations[*].Instances[?State.Name=='running' && InstanceLifecycle==null].PrivateIpAddress" --output=text | xargs -n1 > on.demond.txt 
#List all instance which not tag with {Team}-useful
aws ec2 describe-instances --query 'Reservations[].Instances[?!contains(Tags[].Key, `Team`)][].PrivateIpAddress'
#resize and growpart for root disk
https://computingforgeeks.com/how-to-extend-aws-ec2-instance-boot-file-system-without-rebooting/
#Git clon push commit
git clone git@github.com:JoulRoad/instance-information.git
 1163  cat ~/.ssh/id_rsa.pub 
 1164  git clone git@github.com:JoulRoad/instance-information.git
 1165  ls
 1166  cd instance-information/
 1167  git status
 1168  ls
 1169  git checkout -b shiv/addTranformTfstate
 1170  cp ../terraform.tfstate .
 1171  LS
 1172  git status
 1173  git add .
 1174  git commit -m "Added terraform.tfstate"
 1175  git push
 1176      git push --set-upstream origin shiv/addTranformTfstate
 1177  git status
 1178  git checkout master
 1179  cd ..
 1180  ls
 1181  cd instance-information/
 1182  ls
 1183  git checkout master

